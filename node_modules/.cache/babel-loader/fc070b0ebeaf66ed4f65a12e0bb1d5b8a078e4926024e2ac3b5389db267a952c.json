{"ast":null,"code":"// ClippIntell Bot Detection MVP - Supabase Configuration\n\nimport { createClient } from '@supabase/supabase-js';\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables');\n}\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n\n// Database schema types for Supabase\n\n// Auth helper functions\nexport const authHelpers = {\n  signUp: async (email, password) => {\n    return await supabase.auth.signUp({\n      email,\n      password\n    });\n  },\n  signIn: async (email, password) => {\n    return await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n  },\n  signOut: async () => {\n    return await supabase.auth.signOut();\n  },\n  getCurrentUser: () => {\n    return supabase.auth.getUser();\n  },\n  onAuthStateChange: callback => {\n    return supabase.auth.onAuthStateChange(callback);\n  }\n};","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","Error","supabase","authHelpers","signUp","email","password","auth","signIn","signInWithPassword","signOut","getCurrentUser","getUser","onAuthStateChange","callback"],"sources":["/Users/chrism2homefolder/Desktop/ClippIntelProject/src/components/auth/supabase.ts"],"sourcesContent":["// ClippIntell Bot Detection MVP - Supabase Configuration\n\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL!;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY!;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables');\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n\n// Database schema types for Supabase\nexport interface Database {\n  public: {\n    Tables: {\n      users: {\n        Row: {\n          id: string;\n          email: string;\n          subscription_tier: string;\n          monthly_analysis_limit: number;\n          analysis_count: number;\n          created_at: string;\n          updated_at: string;\n        };\n        Insert: {\n          id?: string;\n          email: string;\n          subscription_tier?: string;\n          monthly_analysis_limit?: number;\n          analysis_count?: number;\n          created_at?: string;\n          updated_at?: string;\n        };\n        Update: {\n          id?: string;\n          email?: string;\n          subscription_tier?: string;\n          monthly_analysis_limit?: number;\n          analysis_count?: number;\n          updated_at?: string;\n        };\n      };\n      bot_analyses: {\n        Row: {\n          id: string;\n          user_id: string;\n          account_handle: string;\n          platform: string;\n          bot_score: number;\n          risk_level: string;\n          signals: any;\n          metrics: any;\n          red_flags: string[];\n          recommendations: string[];\n          confidence: number;\n          processing_time: number;\n          created_at: string;\n        };\n        Insert: {\n          id?: string;\n          user_id: string;\n          account_handle: string;\n          platform: string;\n          bot_score: number;\n          risk_level: string;\n          signals: any;\n          metrics: any;\n          red_flags?: string[];\n          recommendations?: string[];\n          confidence: number;\n          processing_time: number;\n          created_at?: string;\n        };\n        Update: {\n          id?: string;\n          user_id?: string;\n          account_handle?: string;\n          platform?: string;\n          bot_score?: number;\n          risk_level?: string;\n          signals?: any;\n          metrics?: any;\n          red_flags?: string[];\n          recommendations?: string[];\n          confidence?: number;\n          processing_time?: number;\n        };\n      };\n      campaigns: {\n        Row: {\n          id: string;\n          user_id: string;\n          name: string;\n          description: string;\n          total_analyses: number;\n          high_risk_accounts: number;\n          average_bot_score: number;\n          created_at: string;\n          updated_at: string;\n        };\n        Insert: {\n          id?: string;\n          user_id: string;\n          name: string;\n          description?: string;\n          total_analyses?: number;\n          high_risk_accounts?: number;\n          average_bot_score?: number;\n          created_at?: string;\n          updated_at?: string;\n        };\n        Update: {\n          id?: string;\n          user_id?: string;\n          name?: string;\n          description?: string;\n          total_analyses?: number;\n          high_risk_accounts?: number;\n          average_bot_score?: number;\n          updated_at?: string;\n        };\n      };\n    };\n  };\n}\n\n// Auth helper functions\nexport const authHelpers = {\n  signUp: async (email: string, password: string) => {\n    return await supabase.auth.signUp({ email, password });\n  },\n  \n  signIn: async (email: string, password: string) => {\n    return await supabase.auth.signInWithPassword({ email, password });\n  },\n  \n  signOut: async () => {\n    return await supabase.auth.signOut();\n  },\n  \n  getCurrentUser: () => {\n    return supabase.auth.getUser();\n  },\n  \n  onAuthStateChange: (callback: (event: string, session: any) => void) => {\n    return supabase.auth.onAuthStateChange(callback);\n  }\n};"],"mappings":"AAAA;;AAEA,SAASA,YAAY,QAAQ,uBAAuB;AAEpD,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAuB;AACvD,MAAMC,eAAe,GAAGH,OAAO,CAACC,GAAG,CAACG,2BAA4B;AAEhE,IAAI,CAACL,WAAW,IAAI,CAACI,eAAe,EAAE;EACpC,MAAM,IAAIE,KAAK,CAAC,wCAAwC,CAAC;AAC3D;AAEA,OAAO,MAAMC,QAAQ,GAAGR,YAAY,CAACC,WAAW,EAAEI,eAAe,CAAC;;AAElE;;AAoHA;AACA,OAAO,MAAMI,WAAW,GAAG;EACzBC,MAAM,EAAE,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAK;IACjD,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAACH,MAAM,CAAC;MAAEC,KAAK;MAAEC;IAAS,CAAC,CAAC;EACxD,CAAC;EAEDE,MAAM,EAAE,MAAAA,CAAOH,KAAa,EAAEC,QAAgB,KAAK;IACjD,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAACE,kBAAkB,CAAC;MAAEJ,KAAK;MAAEC;IAAS,CAAC,CAAC;EACpE,CAAC;EAEDI,OAAO,EAAE,MAAAA,CAAA,KAAY;IACnB,OAAO,MAAMR,QAAQ,CAACK,IAAI,CAACG,OAAO,CAAC,CAAC;EACtC,CAAC;EAEDC,cAAc,EAAEA,CAAA,KAAM;IACpB,OAAOT,QAAQ,CAACK,IAAI,CAACK,OAAO,CAAC,CAAC;EAChC,CAAC;EAEDC,iBAAiB,EAAGC,QAA+C,IAAK;IACtE,OAAOZ,QAAQ,CAACK,IAAI,CAACM,iBAAiB,CAACC,QAAQ,CAAC;EAClD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}