{"ast":null,"code":"// socialMediaApi.ts - Minimal Working Version for Instagram Demo\n// This gets Instagram working immediately without complexity\n\n// Types\n\n// Instagram Demo Analysis - WORKING!\nexport async function analyzeInstagramAccount(username) {\n  // Remove @ if provided\n  const cleanUsername = username.replace('@', '');\n  const demoAccounts = {\n    'cristiano': {\n      platform: 'instagram',\n      username: 'cristiano',\n      accountType: 'CREATOR',\n      analysis: {\n        botProbability: 5,\n        riskLevel: 'Very Low',\n        flags: [],\n        recommendation: 'Account appears authentic. Approved for campaign participation.',\n        metrics: {\n          followers: 635000000,\n          following: 540,\n          posts: 3489,\n          accountType: 'CREATOR',\n          followerRatio: 1175925.93\n        }\n      }\n    }\n  };\n  return demoAccounts[cleanUsername.toLowerCase()] || {\n    platform: 'instagram',\n    username: cleanUsername,\n    accountType: 'UNKNOWN',\n    analysis: {\n      botProbability: 45,\n      riskLevel: 'Medium',\n      flags: ['Account not in demo database'],\n      recommendation: 'Requires manual review before approval.',\n      metrics: {\n        followers: 0,\n        following: 0,\n        posts: 0,\n        accountType: 'UNKNOWN',\n        followerRatio: 0\n      }\n    }\n  };\n}\n\n// Utility Functions\nexport function validatePlatformInput() {\n  return {\n    isValid: true\n  };\n}\nexport function getRiskColor() {\n  return 'text-gray-600 bg-gray-50';\n}\nexport function formatNumber(num) {\n  return num.toString();\n}\nexport async function analyzeYouTubeChannel() {\n  throw new Error('Not implemented');\n}\nexport async function analyzeTwitterAccount() {\n  throw new Error('Not implemented');\n}\nexport async function analyzeTikTokAccount() {\n  throw new Error('Not implemented');\n}","map":{"version":3,"names":["analyzeInstagramAccount","username","cleanUsername","replace","demoAccounts","platform","accountType","analysis","botProbability","riskLevel","flags","recommendation","metrics","followers","following","posts","followerRatio","toLowerCase","validatePlatformInput","isValid","getRiskColor","formatNumber","num","toString","analyzeYouTubeChannel","Error","analyzeTwitterAccount","analyzeTikTokAccount"],"sources":["/Users/chrism2homefolder/Desktop/ClippIntelProject/src/utils/socialMediaApi.ts"],"sourcesContent":["// socialMediaApi.ts - Minimal Working Version for Instagram Demo\n// This gets Instagram working immediately without complexity\n\n// Types\nexport interface BotDetectionResult {\n  platform: string;\n  username: string;\n  accountType?: string;\n  channelId?: string;\n  channelName?: string;\n  displayName?: string;\n  analysis: {\n    botProbability: number;\n    riskLevel: string;\n    flags: string[];\n    recommendation: string;\n    metrics: any;\n  };\n}\n\n// Instagram Demo Analysis - WORKING!\nexport async function analyzeInstagramAccount(username: string): Promise<BotDetectionResult> {\n  // Remove @ if provided\n  const cleanUsername = username.replace('@', '');\n  \n  const demoAccounts: Record<string, any> = {\n    'cristiano': {\n      platform: 'instagram',\n      username: 'cristiano',\n      accountType: 'CREATOR',\n      analysis: {\n        botProbability: 5,\n        riskLevel: 'Very Low',\n        flags: [],\n        recommendation: 'Account appears authentic. Approved for campaign participation.',\n        metrics: {\n          followers: 635000000,\n          following: 540,\n          posts: 3489,\n          accountType: 'CREATOR',\n          followerRatio: 1175925.93\n        }\n      }\n    }\n  };\n\n  return demoAccounts[cleanUsername.toLowerCase()] || {\n    platform: 'instagram',\n    username: cleanUsername,\n    accountType: 'UNKNOWN',\n    analysis: {\n      botProbability: 45,\n      riskLevel: 'Medium',\n      flags: ['Account not in demo database'],\n      recommendation: 'Requires manual review before approval.',\n      metrics: {\n        followers: 0,\n        following: 0,\n        posts: 0,\n        accountType: 'UNKNOWN',\n        followerRatio: 0\n      }\n    }\n  };\n}\n\n// Utility Functions\nexport function validatePlatformInput(): { isValid: boolean } { return { isValid: true }; }\nexport function getRiskColor(): string { return 'text-gray-600 bg-gray-50'; }\nexport function formatNumber(num: number): string { return num.toString(); }\nexport async function analyzeYouTubeChannel(): Promise<any> { throw new Error('Not implemented'); }\nexport async function analyzeTwitterAccount(): Promise<any> { throw new Error('Not implemented'); }\nexport async function analyzeTikTokAccount(): Promise<any> { throw new Error('Not implemented'); }\n"],"mappings":"AAAA;AACA;;AAEA;;AAiBA;AACA,OAAO,eAAeA,uBAAuBA,CAACC,QAAgB,EAA+B;EAC3F;EACA,MAAMC,aAAa,GAAGD,QAAQ,CAACE,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;EAE/C,MAAMC,YAAiC,GAAG;IACxC,WAAW,EAAE;MACXC,QAAQ,EAAE,WAAW;MACrBJ,QAAQ,EAAE,WAAW;MACrBK,WAAW,EAAE,SAAS;MACtBC,QAAQ,EAAE;QACRC,cAAc,EAAE,CAAC;QACjBC,SAAS,EAAE,UAAU;QACrBC,KAAK,EAAE,EAAE;QACTC,cAAc,EAAE,iEAAiE;QACjFC,OAAO,EAAE;UACPC,SAAS,EAAE,SAAS;UACpBC,SAAS,EAAE,GAAG;UACdC,KAAK,EAAE,IAAI;UACXT,WAAW,EAAE,SAAS;UACtBU,aAAa,EAAE;QACjB;MACF;IACF;EACF,CAAC;EAED,OAAOZ,YAAY,CAACF,aAAa,CAACe,WAAW,CAAC,CAAC,CAAC,IAAI;IAClDZ,QAAQ,EAAE,WAAW;IACrBJ,QAAQ,EAAEC,aAAa;IACvBI,WAAW,EAAE,SAAS;IACtBC,QAAQ,EAAE;MACRC,cAAc,EAAE,EAAE;MAClBC,SAAS,EAAE,QAAQ;MACnBC,KAAK,EAAE,CAAC,8BAA8B,CAAC;MACvCC,cAAc,EAAE,yCAAyC;MACzDC,OAAO,EAAE;QACPC,SAAS,EAAE,CAAC;QACZC,SAAS,EAAE,CAAC;QACZC,KAAK,EAAE,CAAC;QACRT,WAAW,EAAE,SAAS;QACtBU,aAAa,EAAE;MACjB;IACF;EACF,CAAC;AACH;;AAEA;AACA,OAAO,SAASE,qBAAqBA,CAAA,EAAyB;EAAE,OAAO;IAAEC,OAAO,EAAE;EAAK,CAAC;AAAE;AAC1F,OAAO,SAASC,YAAYA,CAAA,EAAW;EAAE,OAAO,0BAA0B;AAAE;AAC5E,OAAO,SAASC,YAAYA,CAACC,GAAW,EAAU;EAAE,OAAOA,GAAG,CAACC,QAAQ,CAAC,CAAC;AAAE;AAC3E,OAAO,eAAeC,qBAAqBA,CAAA,EAAiB;EAAE,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;AAAE;AAClG,OAAO,eAAeC,qBAAqBA,CAAA,EAAiB;EAAE,MAAM,IAAID,KAAK,CAAC,iBAAiB,CAAC;AAAE;AAClG,OAAO,eAAeE,oBAAoBA,CAAA,EAAiB;EAAE,MAAM,IAAIF,KAAK,CAAC,iBAAiB,CAAC;AAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}