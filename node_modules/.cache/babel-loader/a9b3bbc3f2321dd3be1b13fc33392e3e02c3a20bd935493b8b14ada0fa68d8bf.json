{"ast":null,"code":"// ClippIntell Advanced Bot Detection Engine - Market-Tested Signals\n\n// Enhanced metrics interface with real-world bot indicators\n\n// Real bot patterns identified by agency owners\nclass AdvancedSocialMediaScraper {\n  async scrapeAccountData(account) {\n    const suspiciousKeywords = ['bot', 'fake', '2024', '2023', 'auto', 'spam', 'promo', 'follow4follow', 'f4f', 'like4like', 'l4l', 'boost', 'viral', 'growth', 'hack', 'gain', 'instant', 'quick', 'fast'];\n    const isSuspicious = suspiciousKeywords.some(keyword => account.handle.toLowerCase().includes(keyword));\n\n    // Generate realistic base metrics\n    let baseFollowers = Math.floor(Math.random() * 50000 + 1000);\n    let followingMultiplier = Math.random() * 2 + 0.5;\n\n    // Bot accounts often have specific patterns\n    if (isSuspicious) {\n      baseFollowers = Math.floor(Math.random() * 100000 + 20000);\n      followingMultiplier = Math.random() * 8 + 3; // Bots follow many accounts\n    }\n    const baseMetrics = {\n      followers: baseFollowers,\n      following: Math.floor(baseFollowers * followingMultiplier / 10),\n      posts: isSuspicious ? Math.floor(Math.random() * 30 + 5) : Math.floor(Math.random() * 500 + 50),\n      avgLikes: 0,\n      avgComments: 0,\n      engagementRate: 0,\n      followerToFollowingRatio: 0,\n      // ADVANCED METRICS - Real bot detection signals\n      viewVelocitySpikes: isSuspicious ? Math.floor(Math.random() * 20 + 5) : Math.floor(Math.random() * 3),\n      geographicConcentration: isSuspicious ? Math.floor(Math.random() * 30 + 70) : Math.floor(Math.random() * 40 + 30),\n      engagementLagTime: isSuspicious ? Math.floor(Math.random() * 120 + 60) : Math.floor(Math.random() * 30 + 5),\n      watchTimeQuality: isSuspicious ? Math.floor(Math.random() * 40 + 20) : Math.floor(Math.random() * 30 + 60),\n      commentQuality: isSuspicious ? Math.floor(Math.random() * 30 + 10) : Math.floor(Math.random() * 30 + 70),\n      profileCompletionScore: isSuspicious ? Math.floor(Math.random() * 40 + 20) : Math.floor(Math.random() * 30 + 70),\n      activityConsistency: isSuspicious ? Math.floor(Math.random() * 50 + 20) : Math.floor(Math.random() * 30 + 70),\n      networkHealth: isSuspicious ? Math.floor(Math.random() * 40 + 10) : Math.floor(Math.random() * 40 + 60),\n      contentOriginality: isSuspicious ? Math.floor(Math.random() * 30 + 20) : Math.floor(Math.random() * 30 + 70),\n      temporalPatterns: isSuspicious ? Math.floor(Math.random() * 50 + 20) : Math.floor(Math.random() * 30 + 70)\n    };\n\n    // Calculate engagement based on bot likelihood\n    let engagementBase = isSuspicious ? Math.random() > 0.6 ? Math.random() * 0.20 : Math.random() * 0.005 :\n    // Extreme high or low\n    Math.random() * 0.06 + 0.015; // Normal range\n\n    baseMetrics.avgLikes = Math.floor(baseMetrics.followers * engagementBase);\n    baseMetrics.avgComments = Math.floor(baseMetrics.avgLikes * (Math.random() * 0.15 + 0.05));\n    baseMetrics.engagementRate = (baseMetrics.avgLikes + baseMetrics.avgComments) / baseMetrics.followers * 100;\n    baseMetrics.followerToFollowingRatio = baseMetrics.followers / baseMetrics.following;\n\n    // Platform-specific adjustments\n    if (account.platform === 'tiktok') {\n      baseMetrics.avgViews = Math.floor(baseMetrics.followers * (Math.random() * 0.5 + 0.2));\n    }\n\n    // Simulate realistic API delay\n    await new Promise(resolve => setTimeout(resolve, 2000 + Math.random() * 3000));\n    return baseMetrics;\n  }\n}\n\n// Advanced bot analyzer with market-tested detection signals\nexport class AdvancedBotAnalyzer {\n  constructor() {\n    this.scraper = void 0;\n    this.scraper = new AdvancedSocialMediaScraper();\n  }\n  async analyzeAccount(account) {\n    const startTime = Date.now();\n    try {\n      console.log(`üîç Starting advanced analysis for ${account.handle} on ${account.platform}`);\n\n      // Get comprehensive metrics\n      const metrics = await this.scraper.scrapeAccountData(account);\n      console.log('üìä Advanced metrics collected:', metrics);\n\n      // Multi-layer analysis\n      const signals = this.performAdvancedSignalAnalysis(account, metrics);\n      const botScore = this.calculateAdvancedBotScore(metrics, signals);\n      const riskLevel = this.determineRiskLevel(botScore);\n      const redFlags = this.identifyAdvancedRedFlags(account, metrics, signals);\n      const recommendations = this.generateAdvancedRecommendations(riskLevel, redFlags, botScore, metrics);\n      const processingTime = (Date.now() - startTime) / 1000;\n      const result = {\n        id: this.generateAnalysisId(),\n        account,\n        botScore,\n        riskLevel,\n        signals,\n        metrics,\n        redFlags,\n        recommendations,\n        confidence: this.calculateAdvancedConfidence(metrics, signals),\n        analysisDate: new Date().toISOString(),\n        processingTime\n      };\n      console.log('‚úÖ Advanced analysis complete:', result);\n      return result;\n    } catch (error) {\n      console.error('‚ùå Advanced analysis failed:', error);\n      throw new Error(`Advanced analysis failed: ${error.message}`);\n    }\n  }\n  performAdvancedSignalAnalysis(account, metrics) {\n    // 1. FOLLOWER QUALITY ANALYSIS (Real agency owner insights)\n    let followerQuality = 'normal';\n\n    // Check for classic bot indicators\n    if (metrics.followerToFollowingRatio < 0.1 || metrics.geographicConcentration > 85 || metrics.networkHealth < 40) {\n      followerQuality = 'suspicious';\n    }\n    if (metrics.followerToFollowingRatio < 0.05 || metrics.geographicConcentration > 95 || metrics.profileCompletionScore < 30) {\n      followerQuality = 'fake';\n    }\n\n    // 2. ENGAGEMENT PATTERN ANALYSIS (View velocity + timing)\n    let engagementPattern = 'organic';\n\n    // Agency owner insight: \"Fresh page views by hundreds in seconds\"\n    if (metrics.viewVelocitySpikes > 10 || metrics.engagementLagTime > 90 || metrics.engagementRate > 12) {\n      engagementPattern = 'suspicious';\n    }\n    if (metrics.viewVelocitySpikes > 15 || metrics.engagementLagTime > 120 || metrics.engagementRate > 18 || metrics.engagementRate < 0.1 && metrics.followers > 5000) {\n      engagementPattern = 'automated';\n    }\n\n    // 3. CONTENT CONSISTENCY ANALYSIS\n    let contentConsistency = 'good';\n    if (metrics.contentOriginality < 50 || metrics.posts < 20 || metrics.commentQuality < 50) {\n      contentConsistency = 'poor';\n    }\n    if (metrics.contentOriginality < 30 || metrics.posts < 10 && metrics.followers > 10000) {\n      contentConsistency = 'inconsistent';\n    }\n\n    // 4. ACCOUNT AGE ESTIMATION (Activity patterns)\n    let accountAge = 'established';\n    if (metrics.followers < 1000 || metrics.activityConsistency < 60 || metrics.temporalPatterns < 50) {\n      accountAge = 'recent';\n    }\n    if (metrics.followers < 500 || metrics.posts < 10 || metrics.temporalPatterns < 30) {\n      accountAge = 'very_new';\n    }\n\n    // 5. PROFILE COMPLETENESS\n    let profileCompleteness = 'complete';\n    if (metrics.profileCompletionScore < 70) {\n      profileCompleteness = 'incomplete';\n    }\n    if (metrics.profileCompletionScore < 40) {\n      profileCompleteness = 'minimal';\n    }\n    return {\n      followerQuality,\n      engagementPattern,\n      contentConsistency,\n      accountAge,\n      profileCompleteness\n    };\n  }\n  calculateAdvancedBotScore(metrics, signals) {\n    let score = 0;\n\n    // CORE SIGNALS (Agency owner priorities)\n\n    // 1. View Velocity Spikes (25% weight) - \"hundreds of views in seconds\"\n    if (metrics.viewVelocitySpikes > 15) score += 25;else if (metrics.viewVelocitySpikes > 10) score += 18;else if (metrics.viewVelocitySpikes > 5) score += 10;\n\n    // 2. Geographic Concentration (20% weight) - \"90-99% from one country\"\n    if (metrics.geographicConcentration > 95) score += 20;else if (metrics.geographicConcentration > 85) score += 15;else if (metrics.geographicConcentration > 75) score += 8;\n\n    // 3. Engagement Lag Time (15% weight) - \"views but low engagement\"\n    if (metrics.engagementLagTime > 120) score += 15;else if (metrics.engagementLagTime > 90) score += 10;else if (metrics.engagementLagTime > 60) score += 5;\n\n    // 4. Comment Quality (15% weight) - \"generic/repetitive comments\"\n    if (metrics.commentQuality < 30) score += 15;else if (metrics.commentQuality < 50) score += 10;else if (metrics.commentQuality < 70) score += 5;\n\n    // 5. Traditional Signals (25% weight)\n    if (signals.followerQuality === 'fake') score += 12;else if (signals.followerQuality === 'suspicious') score += 8;\n    if (signals.engagementPattern === 'automated') score += 10;else if (signals.engagementPattern === 'suspicious') score += 6;\n    if (signals.contentConsistency === 'inconsistent') score += 3;\n\n    // ADVANCED MODIFIERS\n\n    // Watch time quality mismatch\n    if (metrics.watchTimeQuality < 40) score += 8;\n\n    // Network health (connections to other bots)\n    if (metrics.networkHealth < 30) score += 10;\n\n    // Activity patterns (24/7 vs human sleep)\n    if (metrics.temporalPatterns < 30) score += 8;\n\n    // Profile completion (bot accounts often incomplete)\n    if (metrics.profileCompletionScore < 30) score += 6;\n\n    // EXTREME CASES\n    if (metrics.viewVelocitySpikes > 20 && metrics.geographicConcentration > 90) {\n      score += 15; // Classic bot farm pattern\n    }\n    if (metrics.engagementRate > 15 && metrics.commentQuality < 40) {\n      score += 12; // Boosted with fake engagement\n    }\n    return Math.min(100, Math.max(0, score));\n  }\n  determineRiskLevel(botScore) {\n    if (botScore >= 75) return 'high';\n    if (botScore >= 45) return 'medium';\n    return 'low';\n  }\n  identifyAdvancedRedFlags(account, metrics, signals) {\n    const flags = [];\n\n    // AGENCY OWNER PRIORITY FLAGS\n\n    // View velocity anomalies\n    if (metrics.viewVelocitySpikes > 15) {\n      flags.push(`üö® CRITICAL: Extreme view velocity spikes detected (${metrics.viewVelocitySpikes} per hour)`);\n    } else if (metrics.viewVelocitySpikes > 10) {\n      flags.push(`‚ö†Ô∏è High view velocity spikes detected (${metrics.viewVelocitySpikes} per hour)`);\n    }\n\n    // Geographic concentration\n    if (metrics.geographicConcentration > 95) {\n      flags.push(`üö® CRITICAL: ${metrics.geographicConcentration}% of audience from single country`);\n    } else if (metrics.geographicConcentration > 85) {\n      flags.push(`‚ö†Ô∏è ${metrics.geographicConcentration}% audience concentration in one region`);\n    }\n\n    // Engagement timing issues\n    if (metrics.engagementLagTime > 120) {\n      flags.push(`üö® CRITICAL: ${Math.floor(metrics.engagementLagTime / 60)}+ hour delay between views and engagement`);\n    } else if (metrics.engagementLagTime > 90) {\n      flags.push(`‚ö†Ô∏è Significant delay between views and engagement (${metrics.engagementLagTime} minutes)`);\n    }\n\n    // Comment quality\n    if (metrics.commentQuality < 30) {\n      flags.push('üö® CRITICAL: Comments appear generic, repetitive, or AI-generated');\n    }\n\n    // Watch time vs virality mismatch\n    if (metrics.watchTimeQuality < 40) {\n      flags.push('‚ö†Ô∏è Watch time insufficient to explain viral view counts');\n    }\n\n    // Network analysis\n    if (metrics.networkHealth < 30) {\n      flags.push('üö® CRITICAL: Account primarily connects to other suspicious accounts');\n    }\n\n    // Activity patterns\n    if (metrics.temporalPatterns < 30) {\n      flags.push('‚ö†Ô∏è Unnatural 24/7 activity patterns (no human sleep cycles)');\n    }\n\n    // Traditional red flags\n    if (metrics.followerToFollowingRatio < 0.05) {\n      flags.push(`üö® CRITICAL: Extreme follow ratio (1:${Math.floor(1 / metrics.followerToFollowingRatio)})`);\n    }\n    if (metrics.engagementRate > 15) {\n      flags.push(`üö® CRITICAL: Unrealistic engagement rate (${metrics.engagementRate.toFixed(1)}%)`);\n    }\n\n    // Content flags\n    if (metrics.contentOriginality < 30) {\n      flags.push('‚ö†Ô∏è Primarily reposts/stolen content');\n    }\n    if (metrics.posts < 10 && metrics.followers > 10000) {\n      flags.push('üö® CRITICAL: High follower count with minimal content');\n    }\n    return flags;\n  }\n  generateAdvancedRecommendations(riskLevel, redFlags, botScore, metrics) {\n    const recommendations = [];\n    switch (riskLevel) {\n      case 'high':\n        recommendations.push('‚ùå REJECT IMMEDIATELY - Multiple bot indicators detected');\n        recommendations.push('üö´ DO NOT PAY - Account shows clear artificial engagement');\n        if (metrics.viewVelocitySpikes > 15) {\n          recommendations.push('‚Ä¢ View manipulation detected - classic bot farm behavior');\n        }\n        if (metrics.geographicConcentration > 90) {\n          recommendations.push('‚Ä¢ Geographic concentration indicates purchased engagement');\n        }\n        if (botScore >= 85) {\n          recommendations.push('‚Ä¢ Account shows professional bot farm characteristics');\n        }\n        recommendations.push('üìù Document this account for future reference');\n        break;\n      case 'medium':\n        recommendations.push('‚ö†Ô∏è MANUAL REVIEW REQUIRED - Proceed with extreme caution');\n        recommendations.push('üîç Request additional verification before approval');\n        recommendations.push('üìã VERIFICATION CHECKLIST:');\n        if (metrics.commentQuality < 70) {\n          recommendations.push('  ‚Ä¢ Ask for live video proof of account control');\n        }\n        if (metrics.geographicConcentration > 75) {\n          recommendations.push('  ‚Ä¢ Request explanation for geographic audience concentration');\n        }\n        if (metrics.viewVelocitySpikes > 5) {\n          recommendations.push('  ‚Ä¢ Ask about recent viral content or promotion methods');\n        }\n        recommendations.push('üí∞ Consider reduced payout until verification complete');\n        recommendations.push('üìû Phone verification strongly recommended');\n        break;\n      case 'low':\n        recommendations.push('‚úÖ APPROVE - Low risk profile detected');\n        recommendations.push('üìà Account shows authentic engagement patterns');\n        if (redFlags.length === 0) {\n          recommendations.push('üåü HIGH QUALITY - No significant red flags identified');\n          recommendations.push('üéØ Ideal for premium campaigns');\n        } else {\n          recommendations.push('üëÄ Monitor for any changes in engagement patterns');\n        }\n        recommendations.push('‚ö° Proceed with standard onboarding process');\n        break;\n    }\n\n    // Risk-specific guidance\n    if (metrics.viewVelocitySpikes > 10) {\n      recommendations.push('üéØ AGENCY INSIGHT: View velocity spikes are primary bot indicator');\n    }\n    if (redFlags.length >= 5) {\n      recommendations.push(`üö® CRITICAL: ${redFlags.length} red flags detected - extremely high risk`);\n    }\n\n    // Business impact\n    const riskCost = botScore > 70 ? 'HIGH' : botScore > 40 ? 'MEDIUM' : 'LOW';\n    recommendations.push(`üíµ FRAUD RISK: ${riskCost} - Potential loss if account is fake`);\n    return recommendations;\n  }\n  calculateAdvancedConfidence(metrics, signals) {\n    let confidence = 75; // Base confidence\n\n    // High confidence indicators\n    if (metrics.viewVelocitySpikes > 15 || metrics.geographicConcentration > 95) {\n      confidence += 20; // Very clear bot signals\n    }\n    if (metrics.commentQuality < 30 && metrics.engagementLagTime > 120) {\n      confidence += 15; // Multiple strong indicators\n    }\n    if (metrics.networkHealth < 30) {\n      confidence += 10; // Network analysis is reliable\n    }\n\n    // Lower confidence for edge cases\n    if (metrics.engagementRate > 3 && metrics.engagementRate < 8) {\n      confidence -= 5; // Normal engagement range\n    }\n    return Math.min(98, Math.max(65, confidence));\n  }\n  generateAnalysisId() {\n    return `advanced_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n}\nexport const botAnalyzer = new AdvancedBotAnalyzer();","map":{"version":3,"names":["AdvancedSocialMediaScraper","scrapeAccountData","account","suspiciousKeywords","isSuspicious","some","keyword","handle","toLowerCase","includes","baseFollowers","Math","floor","random","followingMultiplier","baseMetrics","followers","following","posts","avgLikes","avgComments","engagementRate","followerToFollowingRatio","viewVelocitySpikes","geographicConcentration","engagementLagTime","watchTimeQuality","commentQuality","profileCompletionScore","activityConsistency","networkHealth","contentOriginality","temporalPatterns","engagementBase","platform","avgViews","Promise","resolve","setTimeout","AdvancedBotAnalyzer","constructor","scraper","analyzeAccount","startTime","Date","now","console","log","metrics","signals","performAdvancedSignalAnalysis","botScore","calculateAdvancedBotScore","riskLevel","determineRiskLevel","redFlags","identifyAdvancedRedFlags","recommendations","generateAdvancedRecommendations","processingTime","result","id","generateAnalysisId","confidence","calculateAdvancedConfidence","analysisDate","toISOString","error","Error","message","followerQuality","engagementPattern","contentConsistency","accountAge","profileCompleteness","score","min","max","flags","push","toFixed","length","riskCost","toString","substr","botAnalyzer"],"sources":["/Users/chrism2homefolder/Desktop/ClippIntelProject/src/components/botDetection.ts"],"sourcesContent":["// ClippIntell Advanced Bot Detection Engine - Market-Tested Signals\n\nimport { \n  BotAnalysisResult, \n  SocialAccount, \n  BotSignals, \n  AccountMetrics, \n  BotRiskLevel \n} from '../types';\n\n// Enhanced metrics interface with real-world bot indicators\ninterface AdvancedAccountMetrics extends AccountMetrics {\n  viewVelocitySpikes: number; // Sudden view increases per hour\n  geographicConcentration: number; // % from single country (0-100)\n  engagementLagTime: number; // Minutes between views and engagement\n  watchTimeQuality: number; // Watch time vs virality correlation\n  commentQuality: number; // AI-assessed comment authenticity (0-100)\n  profileCompletionScore: number; // Profile completeness (0-100)\n  activityConsistency: number; // Human-like activity patterns (0-100)\n  networkHealth: number; // Connection to other authentic accounts (0-100)\n  contentOriginality: number; // Original content vs reposts (0-100)\n  temporalPatterns: number; // Natural posting times vs 24/7 (0-100)\n}\n\n// Real bot patterns identified by agency owners\nclass AdvancedSocialMediaScraper {\n  async scrapeAccountData(account: SocialAccount): Promise<AdvancedAccountMetrics> {\n    const suspiciousKeywords = [\n      'bot', 'fake', '2024', '2023', 'auto', 'spam', 'promo', \n      'follow4follow', 'f4f', 'like4like', 'l4l', 'boost', 'viral',\n      'growth', 'hack', 'gain', 'instant', 'quick', 'fast'\n    ];\n    \n    const isSuspicious = suspiciousKeywords.some(keyword => \n      account.handle.toLowerCase().includes(keyword)\n    );\n\n    // Generate realistic base metrics\n    let baseFollowers = Math.floor(Math.random() * 50000 + 1000);\n    let followingMultiplier = Math.random() * 2 + 0.5;\n    \n    // Bot accounts often have specific patterns\n    if (isSuspicious) {\n      baseFollowers = Math.floor(Math.random() * 100000 + 20000);\n      followingMultiplier = Math.random() * 8 + 3; // Bots follow many accounts\n    }\n\n    const baseMetrics = {\n      followers: baseFollowers,\n      following: Math.floor(baseFollowers * followingMultiplier / 10),\n      posts: isSuspicious ? Math.floor(Math.random() * 30 + 5) : Math.floor(Math.random() * 500 + 50),\n      avgLikes: 0,\n      avgComments: 0,\n      engagementRate: 0,\n      followerToFollowingRatio: 0,\n      \n      // ADVANCED METRICS - Real bot detection signals\n      viewVelocitySpikes: isSuspicious ? Math.floor(Math.random() * 20 + 5) : Math.floor(Math.random() * 3),\n      geographicConcentration: isSuspicious ? Math.floor(Math.random() * 30 + 70) : Math.floor(Math.random() * 40 + 30),\n      engagementLagTime: isSuspicious ? Math.floor(Math.random() * 120 + 60) : Math.floor(Math.random() * 30 + 5),\n      watchTimeQuality: isSuspicious ? Math.floor(Math.random() * 40 + 20) : Math.floor(Math.random() * 30 + 60),\n      commentQuality: isSuspicious ? Math.floor(Math.random() * 30 + 10) : Math.floor(Math.random() * 30 + 70),\n      profileCompletionScore: isSuspicious ? Math.floor(Math.random() * 40 + 20) : Math.floor(Math.random() * 30 + 70),\n      activityConsistency: isSuspicious ? Math.floor(Math.random() * 50 + 20) : Math.floor(Math.random() * 30 + 70),\n      networkHealth: isSuspicious ? Math.floor(Math.random() * 40 + 10) : Math.floor(Math.random() * 40 + 60),\n      contentOriginality: isSuspicious ? Math.floor(Math.random() * 30 + 20) : Math.floor(Math.random() * 30 + 70),\n      temporalPatterns: isSuspicious ? Math.floor(Math.random() * 50 + 20) : Math.floor(Math.random() * 30 + 70)\n    };\n\n    // Calculate engagement based on bot likelihood\n    let engagementBase = isSuspicious ? \n      (Math.random() > 0.6 ? Math.random() * 0.20 : Math.random() * 0.005) : // Extreme high or low\n      Math.random() * 0.06 + 0.015; // Normal range\n\n    baseMetrics.avgLikes = Math.floor(baseMetrics.followers * engagementBase);\n    baseMetrics.avgComments = Math.floor(baseMetrics.avgLikes * (Math.random() * 0.15 + 0.05));\n    baseMetrics.engagementRate = ((baseMetrics.avgLikes + baseMetrics.avgComments) / baseMetrics.followers) * 100;\n    baseMetrics.followerToFollowingRatio = baseMetrics.followers / baseMetrics.following;\n\n    // Platform-specific adjustments\n    if (account.platform === 'tiktok') {\n      baseMetrics.avgViews = Math.floor(baseMetrics.followers * (Math.random() * 0.5 + 0.2));\n    }\n\n    // Simulate realistic API delay\n    await new Promise(resolve => setTimeout(resolve, 2000 + Math.random() * 3000));\n\n    return baseMetrics;\n  }\n}\n\n// Advanced bot analyzer with market-tested detection signals\nexport class AdvancedBotAnalyzer {\n  private scraper: AdvancedSocialMediaScraper;\n\n  constructor() {\n    this.scraper = new AdvancedSocialMediaScraper();\n  }\n\n  async analyzeAccount(account: SocialAccount): Promise<BotAnalysisResult> {\n    const startTime = Date.now();\n\n    try {\n      console.log(`üîç Starting advanced analysis for ${account.handle} on ${account.platform}`);\n\n      // Get comprehensive metrics\n      const metrics = await this.scraper.scrapeAccountData(account);\n      console.log('üìä Advanced metrics collected:', metrics);\n\n      // Multi-layer analysis\n      const signals = this.performAdvancedSignalAnalysis(account, metrics);\n      const botScore = this.calculateAdvancedBotScore(metrics, signals);\n      const riskLevel = this.determineRiskLevel(botScore);\n      const redFlags = this.identifyAdvancedRedFlags(account, metrics, signals);\n      const recommendations = this.generateAdvancedRecommendations(riskLevel, redFlags, botScore, metrics);\n\n      const processingTime = (Date.now() - startTime) / 1000;\n\n      const result: BotAnalysisResult = {\n        id: this.generateAnalysisId(),\n        account,\n        botScore,\n        riskLevel,\n        signals,\n        metrics,\n        redFlags,\n        recommendations,\n        confidence: this.calculateAdvancedConfidence(metrics, signals),\n        analysisDate: new Date().toISOString(),\n        processingTime\n      };\n\n      console.log('‚úÖ Advanced analysis complete:', result);\n      return result;\n\n    } catch (error) {\n      console.error('‚ùå Advanced analysis failed:', error);\n      throw new Error(`Advanced analysis failed: ${error.message}`);\n    }\n  }\n\n  private performAdvancedSignalAnalysis(account: SocialAccount, metrics: AdvancedAccountMetrics): BotSignals {\n    // 1. FOLLOWER QUALITY ANALYSIS (Real agency owner insights)\n    let followerQuality: 'normal' | 'suspicious' | 'fake' = 'normal';\n    \n    // Check for classic bot indicators\n    if (metrics.followerToFollowingRatio < 0.1 || \n        metrics.geographicConcentration > 85 ||\n        metrics.networkHealth < 40) {\n      followerQuality = 'suspicious';\n    }\n    \n    if (metrics.followerToFollowingRatio < 0.05 || \n        metrics.geographicConcentration > 95 ||\n        metrics.profileCompletionScore < 30) {\n      followerQuality = 'fake';\n    }\n\n    // 2. ENGAGEMENT PATTERN ANALYSIS (View velocity + timing)\n    let engagementPattern: 'organic' | 'automated' | 'suspicious' = 'organic';\n    \n    // Agency owner insight: \"Fresh page views by hundreds in seconds\"\n    if (metrics.viewVelocitySpikes > 10 || \n        metrics.engagementLagTime > 90 ||\n        metrics.engagementRate > 12) {\n      engagementPattern = 'suspicious';\n    }\n    \n    if (metrics.viewVelocitySpikes > 15 || \n        metrics.engagementLagTime > 120 ||\n        metrics.engagementRate > 18 ||\n        (metrics.engagementRate < 0.1 && metrics.followers > 5000)) {\n      engagementPattern = 'automated';\n    }\n\n    // 3. CONTENT CONSISTENCY ANALYSIS\n    let contentConsistency: 'good' | 'poor' | 'inconsistent' = 'good';\n    \n    if (metrics.contentOriginality < 50 || \n        metrics.posts < 20 ||\n        metrics.commentQuality < 50) {\n      contentConsistency = 'poor';\n    }\n    \n    if (metrics.contentOriginality < 30 || \n        (metrics.posts < 10 && metrics.followers > 10000)) {\n      contentConsistency = 'inconsistent';\n    }\n\n    // 4. ACCOUNT AGE ESTIMATION (Activity patterns)\n    let accountAge: 'established' | 'recent' | 'very_new' = 'established';\n    \n    if (metrics.followers < 1000 || \n        metrics.activityConsistency < 60 ||\n        metrics.temporalPatterns < 50) {\n      accountAge = 'recent';\n    }\n    \n    if (metrics.followers < 500 || \n        metrics.posts < 10 ||\n        metrics.temporalPatterns < 30) {\n      accountAge = 'very_new';\n    }\n\n    // 5. PROFILE COMPLETENESS\n    let profileCompleteness: 'complete' | 'incomplete' | 'minimal' = 'complete';\n    \n    if (metrics.profileCompletionScore < 70) {\n      profileCompleteness = 'incomplete';\n    }\n    \n    if (metrics.profileCompletionScore < 40) {\n      profileCompleteness = 'minimal';\n    }\n\n    return {\n      followerQuality,\n      engagementPattern,\n      contentConsistency,\n      accountAge,\n      profileCompleteness\n    };\n  }\n\n  private calculateAdvancedBotScore(metrics: AdvancedAccountMetrics, signals: BotSignals): number {\n    let score = 0;\n\n    // CORE SIGNALS (Agency owner priorities)\n    \n    // 1. View Velocity Spikes (25% weight) - \"hundreds of views in seconds\"\n    if (metrics.viewVelocitySpikes > 15) score += 25;\n    else if (metrics.viewVelocitySpikes > 10) score += 18;\n    else if (metrics.viewVelocitySpikes > 5) score += 10;\n\n    // 2. Geographic Concentration (20% weight) - \"90-99% from one country\"\n    if (metrics.geographicConcentration > 95) score += 20;\n    else if (metrics.geographicConcentration > 85) score += 15;\n    else if (metrics.geographicConcentration > 75) score += 8;\n\n    // 3. Engagement Lag Time (15% weight) - \"views but low engagement\"\n    if (metrics.engagementLagTime > 120) score += 15;\n    else if (metrics.engagementLagTime > 90) score += 10;\n    else if (metrics.engagementLagTime > 60) score += 5;\n\n    // 4. Comment Quality (15% weight) - \"generic/repetitive comments\"\n    if (metrics.commentQuality < 30) score += 15;\n    else if (metrics.commentQuality < 50) score += 10;\n    else if (metrics.commentQuality < 70) score += 5;\n\n    // 5. Traditional Signals (25% weight)\n    if (signals.followerQuality === 'fake') score += 12;\n    else if (signals.followerQuality === 'suspicious') score += 8;\n\n    if (signals.engagementPattern === 'automated') score += 10;\n    else if (signals.engagementPattern === 'suspicious') score += 6;\n\n    if (signals.contentConsistency === 'inconsistent') score += 3;\n\n    // ADVANCED MODIFIERS\n    \n    // Watch time quality mismatch\n    if (metrics.watchTimeQuality < 40) score += 8;\n    \n    // Network health (connections to other bots)\n    if (metrics.networkHealth < 30) score += 10;\n    \n    // Activity patterns (24/7 vs human sleep)\n    if (metrics.temporalPatterns < 30) score += 8;\n    \n    // Profile completion (bot accounts often incomplete)\n    if (metrics.profileCompletionScore < 30) score += 6;\n\n    // EXTREME CASES\n    if (metrics.viewVelocitySpikes > 20 && metrics.geographicConcentration > 90) {\n      score += 15; // Classic bot farm pattern\n    }\n    \n    if (metrics.engagementRate > 15 && metrics.commentQuality < 40) {\n      score += 12; // Boosted with fake engagement\n    }\n\n    return Math.min(100, Math.max(0, score));\n  }\n\n  private determineRiskLevel(botScore: number): BotRiskLevel {\n    if (botScore >= 75) return 'high';\n    if (botScore >= 45) return 'medium';\n    return 'low';\n  }\n\n  private identifyAdvancedRedFlags(account: SocialAccount, metrics: AdvancedAccountMetrics, signals: BotSignals): string[] {\n    const flags: string[] = [];\n\n    // AGENCY OWNER PRIORITY FLAGS\n    \n    // View velocity anomalies\n    if (metrics.viewVelocitySpikes > 15) {\n      flags.push(`üö® CRITICAL: Extreme view velocity spikes detected (${metrics.viewVelocitySpikes} per hour)`);\n    } else if (metrics.viewVelocitySpikes > 10) {\n      flags.push(`‚ö†Ô∏è High view velocity spikes detected (${metrics.viewVelocitySpikes} per hour)`);\n    }\n\n    // Geographic concentration\n    if (metrics.geographicConcentration > 95) {\n      flags.push(`üö® CRITICAL: ${metrics.geographicConcentration}% of audience from single country`);\n    } else if (metrics.geographicConcentration > 85) {\n      flags.push(`‚ö†Ô∏è ${metrics.geographicConcentration}% audience concentration in one region`);\n    }\n\n    // Engagement timing issues\n    if (metrics.engagementLagTime > 120) {\n      flags.push(`üö® CRITICAL: ${Math.floor(metrics.engagementLagTime/60)}+ hour delay between views and engagement`);\n    } else if (metrics.engagementLagTime > 90) {\n      flags.push(`‚ö†Ô∏è Significant delay between views and engagement (${metrics.engagementLagTime} minutes)`);\n    }\n\n    // Comment quality\n    if (metrics.commentQuality < 30) {\n      flags.push('üö® CRITICAL: Comments appear generic, repetitive, or AI-generated');\n    }\n\n    // Watch time vs virality mismatch\n    if (metrics.watchTimeQuality < 40) {\n      flags.push('‚ö†Ô∏è Watch time insufficient to explain viral view counts');\n    }\n\n    // Network analysis\n    if (metrics.networkHealth < 30) {\n      flags.push('üö® CRITICAL: Account primarily connects to other suspicious accounts');\n    }\n\n    // Activity patterns\n    if (metrics.temporalPatterns < 30) {\n      flags.push('‚ö†Ô∏è Unnatural 24/7 activity patterns (no human sleep cycles)');\n    }\n\n    // Traditional red flags\n    if (metrics.followerToFollowingRatio < 0.05) {\n      flags.push(`üö® CRITICAL: Extreme follow ratio (1:${Math.floor(1/metrics.followerToFollowingRatio)})`);\n    }\n\n    if (metrics.engagementRate > 15) {\n      flags.push(`üö® CRITICAL: Unrealistic engagement rate (${metrics.engagementRate.toFixed(1)}%)`);\n    }\n\n    // Content flags\n    if (metrics.contentOriginality < 30) {\n      flags.push('‚ö†Ô∏è Primarily reposts/stolen content');\n    }\n\n    if (metrics.posts < 10 && metrics.followers > 10000) {\n      flags.push('üö® CRITICAL: High follower count with minimal content');\n    }\n\n    return flags;\n  }\n\n  private generateAdvancedRecommendations(\n    riskLevel: BotRiskLevel, \n    redFlags: string[], \n    botScore: number, \n    metrics: AdvancedAccountMetrics\n  ): string[] {\n    const recommendations: string[] = [];\n\n    switch (riskLevel) {\n      case 'high':\n        recommendations.push('‚ùå REJECT IMMEDIATELY - Multiple bot indicators detected');\n        recommendations.push('üö´ DO NOT PAY - Account shows clear artificial engagement');\n        \n        if (metrics.viewVelocitySpikes > 15) {\n          recommendations.push('‚Ä¢ View manipulation detected - classic bot farm behavior');\n        }\n        if (metrics.geographicConcentration > 90) {\n          recommendations.push('‚Ä¢ Geographic concentration indicates purchased engagement');\n        }\n        if (botScore >= 85) {\n          recommendations.push('‚Ä¢ Account shows professional bot farm characteristics');\n        }\n        \n        recommendations.push('üìù Document this account for future reference');\n        break;\n\n      case 'medium':\n        recommendations.push('‚ö†Ô∏è MANUAL REVIEW REQUIRED - Proceed with extreme caution');\n        recommendations.push('üîç Request additional verification before approval');\n        \n        recommendations.push('üìã VERIFICATION CHECKLIST:');\n        if (metrics.commentQuality < 70) {\n          recommendations.push('  ‚Ä¢ Ask for live video proof of account control');\n        }\n        if (metrics.geographicConcentration > 75) {\n          recommendations.push('  ‚Ä¢ Request explanation for geographic audience concentration');\n        }\n        if (metrics.viewVelocitySpikes > 5) {\n          recommendations.push('  ‚Ä¢ Ask about recent viral content or promotion methods');\n        }\n        \n        recommendations.push('üí∞ Consider reduced payout until verification complete');\n        recommendations.push('üìû Phone verification strongly recommended');\n        break;\n\n      case 'low':\n        recommendations.push('‚úÖ APPROVE - Low risk profile detected');\n        recommendations.push('üìà Account shows authentic engagement patterns');\n        \n        if (redFlags.length === 0) {\n          recommendations.push('üåü HIGH QUALITY - No significant red flags identified');\n          recommendations.push('üéØ Ideal for premium campaigns');\n        } else {\n          recommendations.push('üëÄ Monitor for any changes in engagement patterns');\n        }\n        \n        recommendations.push('‚ö° Proceed with standard onboarding process');\n        break;\n    }\n\n    // Risk-specific guidance\n    if (metrics.viewVelocitySpikes > 10) {\n      recommendations.push('üéØ AGENCY INSIGHT: View velocity spikes are primary bot indicator');\n    }\n\n    if (redFlags.length >= 5) {\n      recommendations.push(`üö® CRITICAL: ${redFlags.length} red flags detected - extremely high risk`);\n    }\n\n    // Business impact\n    const riskCost = botScore > 70 ? 'HIGH' : botScore > 40 ? 'MEDIUM' : 'LOW';\n    recommendations.push(`üíµ FRAUD RISK: ${riskCost} - Potential loss if account is fake`);\n\n    return recommendations;\n  }\n\n  private calculateAdvancedConfidence(metrics: AdvancedAccountMetrics, signals: BotSignals): number {\n    let confidence = 75; // Base confidence\n\n    // High confidence indicators\n    if (metrics.viewVelocitySpikes > 15 || metrics.geographicConcentration > 95) {\n      confidence += 20; // Very clear bot signals\n    }\n    \n    if (metrics.commentQuality < 30 && metrics.engagementLagTime > 120) {\n      confidence += 15; // Multiple strong indicators\n    }\n\n    if (metrics.networkHealth < 30) {\n      confidence += 10; // Network analysis is reliable\n    }\n\n    // Lower confidence for edge cases\n    if (metrics.engagementRate > 3 && metrics.engagementRate < 8) {\n      confidence -= 5; // Normal engagement range\n    }\n\n    return Math.min(98, Math.max(65, confidence));\n  }\n\n  private generateAnalysisId(): string {\n    return `advanced_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n}\n\nexport const botAnalyzer = new AdvancedBotAnalyzer();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}