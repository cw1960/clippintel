type Inputs = {
    token: string | undefined | null;
} | {
    req: Request;
} | {
    headers: HeadersInit | (() => Headers);
};
type InputsWithName = {
    token: string | undefined | null;
} | {
    req: Request;
    name?: string;
} | {
    headers: HeadersInit | (() => Headers);
    name?: string;
};
export type GetTokenParams<DontThrow extends boolean> = Inputs & {
    dontThrow?: DontThrow;
};
type GetTokenParamsWithName<DontThrow extends boolean> = InputsWithName & {
    dontThrow?: DontThrow;
};
export declare function addNameToGetTokenParams<DontThrow extends boolean = false>(params: GetTokenParams<DontThrow>, name: string): GetTokenParamsWithName<DontThrow>;
export declare function getTokenFromHeaders(headers: HeadersInit | (() => Headers), name?: string): string | undefined;
export declare function getTokenFromRequest(req: Request, name?: string): string | undefined;
export declare function getToken<DontThrow extends boolean = false>({ dontThrow, ...rest }: GetTokenParamsWithName<DontThrow>): DontThrow extends true ? string | null : string;
export {};
//# sourceMappingURL=getToken.d.ts.map