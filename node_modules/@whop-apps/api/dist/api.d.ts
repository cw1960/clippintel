import { type GetTokenParams } from "@whop-apps/auth";
import { type ClientOptions, type FetchResponse, type HeadersOptions } from "@whop-apps/typed-api";
import type { paths } from "./schema";
type Entity = "me" | "app" | "company";
type ApiPaths = {
    [Path in keyof paths as Path extends `/v5${infer P}` ? P : Path]: paths[Path];
};
type FilterPathsByAvailability<A extends Entity | "misc"> = {
    [Path in keyof ApiPaths as A extends "misc" ? Path extends `/${Entity}` | `/${Entity}/${string}` ? never : Path : Path extends `/${A}` | `/${A}/${string}` ? Path : never]: ApiPaths[Path];
};
export declare const makeApi: <A extends Entity | "misc">({ baseHeaders, customClientOptions, }: {
    baseHeaders: HeadersOptions;
    availability: A;
    customClientOptions?: Partial<ClientOptions> | undefined;
}) => {
    GET<P extends import("@whop-apps/typed-api/dist/rest/type-helpers").PathsWithMethod<FilterPathsByAvailability<A>, "get">>(url: P, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<A>[P], "get">>>): Promise<FetchResponse<"get" extends keyof FilterPathsByAvailability<A>[P] ? FilterPathsByAvailability<A>[P][keyof FilterPathsByAvailability<A>[P] & "get"] : unknown>>;
    PUT<P_1 extends import("@whop-apps/typed-api/dist/rest/type-helpers").PathsWithMethod<FilterPathsByAvailability<A>, "put">>(url: P_1, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<A>[P_1], "put">>>): Promise<FetchResponse<"put" extends keyof FilterPathsByAvailability<A>[P_1] ? FilterPathsByAvailability<A>[P_1][keyof FilterPathsByAvailability<A>[P_1] & "put"] : unknown>>;
    POST<P_2 extends import("@whop-apps/typed-api/dist/rest/type-helpers").PathsWithMethod<FilterPathsByAvailability<A>, "post">>(url: P_2, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<A>[P_2], "post">>>): Promise<FetchResponse<"post" extends keyof FilterPathsByAvailability<A>[P_2] ? FilterPathsByAvailability<A>[P_2][keyof FilterPathsByAvailability<A>[P_2] & "post"] : unknown>>;
    DELETE<P_3 extends import("@whop-apps/typed-api/dist/rest/type-helpers").PathsWithMethod<FilterPathsByAvailability<A>, "delete">>(url: P_3, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<A>[P_3], "delete">>>): Promise<FetchResponse<"delete" extends keyof FilterPathsByAvailability<A>[P_3] ? FilterPathsByAvailability<A>[P_3][keyof FilterPathsByAvailability<A>[P_3] & "delete"] : unknown>>;
    OPTIONS<P_4 extends import("@whop-apps/typed-api/dist/rest/type-helpers").PathsWithMethod<FilterPathsByAvailability<A>, "options">>(url: P_4, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<A>[P_4], "options">>>): Promise<FetchResponse<"options" extends keyof FilterPathsByAvailability<A>[P_4] ? FilterPathsByAvailability<A>[P_4][keyof FilterPathsByAvailability<A>[P_4] & "options"] : unknown>>;
    HEAD<P_5 extends import("@whop-apps/typed-api/dist/rest/type-helpers").PathsWithMethod<FilterPathsByAvailability<A>, "head">>(url: P_5, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<A>[P_5], "head">>>): Promise<FetchResponse<"head" extends keyof FilterPathsByAvailability<A>[P_5] ? FilterPathsByAvailability<A>[P_5][keyof FilterPathsByAvailability<A>[P_5] & "head"] : unknown>>;
    PATCH<P_6 extends import("@whop-apps/typed-api/dist/rest/type-helpers").PathsWithMethod<FilterPathsByAvailability<A>, "patch">>(url: P_6, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<A>[P_6], "patch">>>): Promise<FetchResponse<"patch" extends keyof FilterPathsByAvailability<A>[P_6] ? FilterPathsByAvailability<A>[P_6][keyof FilterPathsByAvailability<A>[P_6] & "patch"] : unknown>>;
    TRACE<P_7 extends import("@whop-apps/typed-api/dist/rest/type-helpers").PathsWithMethod<FilterPathsByAvailability<A>, "trace">>(url: P_7, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<A>[P_7], "trace">>>): Promise<FetchResponse<"trace" extends keyof FilterPathsByAvailability<A>[P_7] ? FilterPathsByAvailability<A>[P_7][keyof FilterPathsByAvailability<A>[P_7] & "trace"] : unknown>>;
};
export declare function me(opts: (GetTokenParams<true> | Record<string, never>) & Partial<Omit<ClientOptions, "headers">> & {
    customHeaders?: ClientOptions["headers"];
}): ReturnType<typeof makeApi<"me">>;
export declare function app(opts?: {
    apiKey?: string;
} & Partial<ClientOptions>): {
    GET<P extends import("@whop-apps/typed-api/dist/rest/type-helpers").PathsWithMethod<FilterPathsByAvailability<"app">, "get">>(url: P, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<"app">[P], "get">>>): Promise<FetchResponse<"get" extends keyof FilterPathsByAvailability<"app">[P] ? FilterPathsByAvailability<"app">[P][keyof FilterPathsByAvailability<"app">[P] & "get"] : unknown>>;
    PUT<P_1 extends never>(url: P_1, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<"app">[P_1], "put">>>): Promise<FetchResponse<"put" extends keyof FilterPathsByAvailability<"app">[P_1] ? FilterPathsByAvailability<"app">[P_1][keyof FilterPathsByAvailability<"app">[P_1] & "put"] : unknown>>;
    POST<P_2 extends import("@whop-apps/typed-api/dist/rest/type-helpers").PathsWithMethod<FilterPathsByAvailability<"app">, "post">>(url: P_2, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<"app">[P_2], "post">>>): Promise<FetchResponse<"post" extends keyof FilterPathsByAvailability<"app">[P_2] ? FilterPathsByAvailability<"app">[P_2][keyof FilterPathsByAvailability<"app">[P_2] & "post"] : unknown>>;
    DELETE<P_3 extends import("@whop-apps/typed-api/dist/rest/type-helpers").PathsWithMethod<FilterPathsByAvailability<"app">, "delete">>(url: P_3, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<"app">[P_3], "delete">>>): Promise<FetchResponse<"delete" extends keyof FilterPathsByAvailability<"app">[P_3] ? FilterPathsByAvailability<"app">[P_3][keyof FilterPathsByAvailability<"app">[P_3] & "delete"] : unknown>>;
    OPTIONS<P_4 extends never>(url: P_4, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<"app">[P_4], "options">>>): Promise<FetchResponse<"options" extends keyof FilterPathsByAvailability<"app">[P_4] ? FilterPathsByAvailability<"app">[P_4][keyof FilterPathsByAvailability<"app">[P_4] & "options"] : unknown>>;
    HEAD<P_5 extends never>(url: P_5, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<"app">[P_5], "head">>>): Promise<FetchResponse<"head" extends keyof FilterPathsByAvailability<"app">[P_5] ? FilterPathsByAvailability<"app">[P_5][keyof FilterPathsByAvailability<"app">[P_5] & "head"] : unknown>>;
    PATCH<P_6 extends import("@whop-apps/typed-api/dist/rest/type-helpers").PathsWithMethod<FilterPathsByAvailability<"app">, "patch">>(url: P_6, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<"app">[P_6], "patch">>>): Promise<FetchResponse<"patch" extends keyof FilterPathsByAvailability<"app">[P_6] ? FilterPathsByAvailability<"app">[P_6][keyof FilterPathsByAvailability<"app">[P_6] & "patch"] : unknown>>;
    TRACE<P_7 extends never>(url: P_7, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<"app">[P_7], "trace">>>): Promise<FetchResponse<"trace" extends keyof FilterPathsByAvailability<"app">[P_7] ? FilterPathsByAvailability<"app">[P_7][keyof FilterPathsByAvailability<"app">[P_7] & "trace"] : unknown>>;
};
export declare function company(opts?: {
    apiKey?: string;
} & Partial<ClientOptions>): {
    GET<P extends import("@whop-apps/typed-api/dist/rest/type-helpers").PathsWithMethod<FilterPathsByAvailability<"company">, "get">>(url: P, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<"company">[P], "get">>>): Promise<FetchResponse<"get" extends keyof FilterPathsByAvailability<"company">[P] ? FilterPathsByAvailability<"company">[P][keyof FilterPathsByAvailability<"company">[P] & "get"] : unknown>>;
    PUT<P_1 extends never>(url: P_1, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<"company">[P_1], "put">>>): Promise<FetchResponse<"put" extends keyof FilterPathsByAvailability<"company">[P_1] ? FilterPathsByAvailability<"company">[P_1][keyof FilterPathsByAvailability<"company">[P_1] & "put"] : unknown>>;
    POST<P_2 extends never>(url: P_2, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<"company">[P_2], "post">>>): Promise<FetchResponse<"post" extends keyof FilterPathsByAvailability<"company">[P_2] ? FilterPathsByAvailability<"company">[P_2][keyof FilterPathsByAvailability<"company">[P_2] & "post"] : unknown>>;
    DELETE<P_3 extends "/company/memberships/{id}">(url: P_3, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<"company">[P_3], "delete">>>): Promise<FetchResponse<"delete" extends keyof FilterPathsByAvailability<"company">[P_3] ? FilterPathsByAvailability<"company">[P_3][keyof FilterPathsByAvailability<"company">[P_3] & "delete"] : unknown>>;
    OPTIONS<P_4 extends never>(url: P_4, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<"company">[P_4], "options">>>): Promise<FetchResponse<"options" extends keyof FilterPathsByAvailability<"company">[P_4] ? FilterPathsByAvailability<"company">[P_4][keyof FilterPathsByAvailability<"company">[P_4] & "options"] : unknown>>;
    HEAD<P_5 extends never>(url: P_5, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<"company">[P_5], "head">>>): Promise<FetchResponse<"head" extends keyof FilterPathsByAvailability<"company">[P_5] ? FilterPathsByAvailability<"company">[P_5][keyof FilterPathsByAvailability<"company">[P_5] & "head"] : unknown>>;
    PATCH<P_6 extends "/company/memberships/{id}">(url: P_6, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<"company">[P_6], "patch">>>): Promise<FetchResponse<"patch" extends keyof FilterPathsByAvailability<"company">[P_6] ? FilterPathsByAvailability<"company">[P_6][keyof FilterPathsByAvailability<"company">[P_6] & "patch"] : unknown>>;
    TRACE<P_7 extends never>(url: P_7, init: import("@whop-apps/typed-api/dist/rest/type-helpers").MakeObjectsWithoutRequiredKeysOptional<import("@whop-apps/typed-api").FetchOptions<import("@whop-apps/typed-api/dist/rest/type-helpers").FilterKeys<FilterPathsByAvailability<"company">[P_7], "trace">>>): Promise<FetchResponse<"trace" extends keyof FilterPathsByAvailability<"company">[P_7] ? FilterPathsByAvailability<"company">[P_7][keyof FilterPathsByAvailability<"company">[P_7] & "trace"] : unknown>>;
};
export {};
//# sourceMappingURL=api.d.ts.map